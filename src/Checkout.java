/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author LENOVO
 */
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JComboBox;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

public class Checkout extends javax.swing.JFrame {

    /**
     * Creates new form Checkout
     */
    public Checkout() {
        initComponents();
        loadPartsIntoComboBox();
        loadTempTransactions();
        calculateTotal();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        namaparts = new JComboBox<>();
        quantity = new javax.swing.JTextField();
        discount = new javax.swing.JTextField();
        uang = new javax.swing.JTextField();
        bayar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        total = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        tambah = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Part Name", "Quantity", "Original Price", "Discounted Price", "Action"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        namaparts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namapartsActionPerformed(evt);
            }
        });

        quantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityActionPerformed(evt);
            }
        });

        discount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discountActionPerformed(evt);
            }
        });

        uang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uangActionPerformed(evt);
            }
        });

        bayar.setText("Bayar");
        bayar.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                bayarActionPerformed(evt);
            }
        });

        jLabel1.setText("Pilih Parts");

        jLabel2.setText("Masukkan Jumlah");

        jLabel3.setText("Masukkan Diskon");

        jLabel4.setText("Uang Tidak Cukup!");

        jLabel5.setText("Uang yang diterima :");

        jLabel6.setText("Total :");

        total.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        jLabel7.setText("Penjualan");

        tambah.setText("Tambah");
        tambah.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                tambahActionPerformed(evt);
            }
        });

        // Inside the initComponents method, add ActionListener for "Tambah" button
        tambah.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent evt) {
                tambahActionPerformed(evt);
            }
        });
        // Inside the initComponents method, add ActionListener for "Bayar" button
        bayar.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent evt) {
                bayarActionPerformed(evt);
            }
        });
            // Add a MouseListener to jTable1 to handle "Delete" button click in the table rows
    jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            int row = jTable1.rowAtPoint(evt.getPoint());
            int col = jTable1.columnAtPoint(evt.getPoint());
            if (col == 4) { // Assuming "Delete" button is in column 4
                deleteRow(row);
            }
        }
    });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tambah)
                    .addComponent(jLabel7)
                    .addComponent(jLabel3)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(uang, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addComponent(bayar)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 633, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(discount, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 273, Short.MAX_VALUE)
                                .addComponent(namaparts, javax.swing.GroupLayout.Alignment.LEADING)))
                        .addGap(68, 68, 68)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(quantity))))
                .addContainerGap(91, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(namaparts, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(3, 3, 3)
                        .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(3, 3, 3)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(discount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(tambah)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(uang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bayar)
                    .addComponent(jLabel4))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Load parts into the dropdown
    private void loadPartsIntoComboBox() {
        try (Connection conn = databaseconnect.connect();
             PreparedStatement stmt = conn.prepareStatement("SELECT namaparts FROM parts");
             ResultSet rs = stmt.executeQuery()) {
            while (rs.next()) {
                namaparts.addItem(rs.getString("namaparts"));
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }



    // Load temp transactions into JTable
    private void loadTempTransactions() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0); // Clear existing data
        try (Connection conn = databaseconnect.connect();
             PreparedStatement stmt = conn.prepareStatement("SELECT * FROM temp_transaction");
             ResultSet rs = stmt.executeQuery()) {
            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getString("namaparts"),
                    rs.getInt("quantity"),
                    rs.getInt("original_price"),
                    rs.getInt("discounted_price"),
                    "Delete"
                });
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    
    private void addDeleteButtonToTable() {
        TableColumn actionColumn = jTable1.getColumnModel().getColumn(4);
        actionColumn.setCellRenderer(new ButtonRenderer());
        actionColumn.setCellEditor(new ButtonEditor(new JCheckBox()) {
            @Override
            public void actionPerformed(ActionEvent e) {
                int row = jTable1.getSelectedRow();
                int id = (int) jTable1.getModel().getValueAt(row, 0);
                deleteTempTransaction(id);
                loadTempTransactions();
            }
            try (PreparedStatement updateStmt = conn.prepareStatement("UPDATE parts SET quantity = quantity + ? WHERE namaparts = ?")) {
                updateStmt.setInt(1, qty); // Pastikan Anda mendapatkan jumlah dari baris yang dihapus
                updateStmt.setString(2, partName);
                updateStmt.executeUpdate();
            }

        });
    }

    private void calculateTotal() {
        int totalAmount = 0;
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        for (int i = 0; i < model.getRowCount(); i++) {
            totalAmount += (int) model.getValueAt(i, 3); // Discounted Price
        }
        total.setText(String.valueOf(totalAmount));
    }

    private Connection connect() throws SQLException {
        return DriverManager.getConnection("jdbc:mysql://localhost:3306/your_database", "username", "password");
    }
    

    private void namapartsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namapartsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_namapartsActionPerformed

    private void bayarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bayarActionPerformed
        // TODO add your handling code here:
    
        
        int uangDiterima = Integer.parseInt(uang.getText());
        int totalHarga = Integer.parseInt(total.getText());

        if (uangDiterima >= totalHarga) {
            try (Connection conn = databaseconnect.connect();
                 PreparedStatement stmt = conn.prepareStatement("INSERT INTO transaction (namaparts, quantity, original_price, discounted_price, discount_percentage) SELECT namaparts, quantity, original_price, discounted_price, discount_percentage FROM temp_transaction")) {
                stmt.executeUpdate();
                try (PreparedStatement clearStmt = conn.prepareStatement("DELETE FROM temp_transaction")) {
                    clearStmt.executeUpdate();
                }
                loadTempTransactions();
                total.setText("0");
                JOptionPane.showMessageDialog(this, "Transaction completed successfully!");
            } catch (SQLException e) {
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Uang tidak cukup!");
        }
    }//GEN-LAST:event_bayarActionPerformed

    private void quantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quantityActionPerformed

    private void discountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_discountActionPerformed

    private void tambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambahActionPerformed
        // TODO add your handling code here:
       
        String partName = (String) namaparts.getSelectedItem();
        int qty = Integer.parseInt(quantity.getText());
        int disc = Integer.parseInt(discount.getText());
        

        try (Connection conn = databaseconnect.connect();
             PreparedStatement stmt = conn.prepareStatement("SELECT price FROM parts WHERE namaparts = ?")) {
            stmt.setString(1, partName);
            ResultSet rs = stmt.executeQuery();
            if (rs.next()) {
                int price = rs.getInt("price");
                int originalPrice = qty * price;
                int discountedPrice = originalPrice - (originalPrice * disc / 100);
                try (PreparedStatement insertStmt = conn.prepareStatement("INSERT INTO temp_transaction (namaparts, quantity, original_price, discounted_price, discount_percentage) VALUES (?, ?, ?, ?, ?)")) {
                    insertStmt.setString(1, partName);
                    insertStmt.setInt(2, qty);
                    insertStmt.setInt(3, originalPrice);
                    insertStmt.setInt(4, discountedPrice);
                    insertStmt.setInt(5, disc);
                    insertStmt.executeUpdate();
                }
                try (PreparedStatement updateStmt = conn.prepareStatement("UPDATE parts SET quantity = quantity - ? WHERE namaparts = ?")) {
                    updateStmt.setInt(1, qty);
                    updateStmt.setString(2, partName);
                    updateStmt.executeUpdate();
                }

                loadTempTransactions();
                calculateTotal();
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_tambahActionPerformed

    private void totalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalActionPerformed

    private void uangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_uangActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Checkout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Checkout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Checkout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Checkout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Checkout().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bayar;
    private javax.swing.JTextField discount;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private JComboBox<String> namaparts;
    private javax.swing.JTextField quantity;
    private javax.swing.JButton tambah;
    private javax.swing.JTextField total;
    private javax.swing.JTextField uang;
    // End of variables declaration//GEN-END:variables

    private void deleteRow(int rowIndex) {
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    String partName = model.getValueAt(rowIndex, 0).toString(); // Ambil nama bagian dari kolom pertama
    
    try (Connection conn = databaseconnect.connect();
         PreparedStatement stmt = conn.prepareStatement("DELETE FROM temp_transaction WHERE namaparts = ?")) {
        stmt.setString(1, partName);
        stmt.executeUpdate();
    } catch (SQLException e) {
        e.printStackTrace();
    }
    
    // Hapus baris dari JTable setelah menghapus dari database
    model.removeRow(rowIndex);
}
}
